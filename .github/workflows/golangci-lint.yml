---
name: 'golangci-lint'
on:
  push:
    branches:
      - 'main'
      - '*'
    tags:
      - 'v*'
    paths-ignore:
      - '**.md'
  pull_request:
permissions:
  contents: 'read'
  # Optional: 'allow read access to pull request. Use with `only-new-issues` option.'
  # pull-requests: 'read'
jobs:
  golangci:
    name: 'lint'
    strategy:
      matrix:
        go-version: ["1.22.x"] # linting in 1 go version is enough
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: 'actions/checkout@v2'
      - uses: 'actions/setup-go@v5'
        with:
          go-version: stable
      - name: ⚙️ Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y
          sudo apt-get install libbtrfs-dev -y
          sudo apt-get install libgpgme-dev -y
          go mod tidy
      - name: 'golangci-lint'
        uses: 'golangci/golangci-lint-action@v6'
        with:
          # Optional: 'version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version'
          version: 'v1.59'

          # Optional: 'working directory, useful for monorepos'
          # working-directory: 'somedir'

          # Optional: 'golangci-lint command line arguments.'
          # args: '--issues-exit-code=0'

          # Optional: 'show only new issues if it's a pull request. The default value is `false`.'
          # only-new-issues: 'true'

          # Optional: 'if set to true then the action will use pre-installed Go.'
          # skip-go-installation: 'true'

          # Optional: 'if set to true then the action don't cache or restore ~/go/pkg.'
          # skip-pkg-cache: 'true'

          # Optional: 'if set to true then the action don't cache or restore ~/.cache/go-build.'
          # skip-build-cache: 'true'
